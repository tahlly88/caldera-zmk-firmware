#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LEFT_CONTROL &kp LEFT_ALT &kp NUMBER_4>;
            label = "SCREENSHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------
            // |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  |  \   |
            // | CAPS |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
            // | CTRL | ALT | GUI | SPC | SPC | SPC |     | SPC | LOW |LARW |DARW |UARW | RARW |

            bindings = <
&mt ESCAPE GRAVE         &kp N1                  &kp N2                         &kp N3                      &kp N4                  &kp N5         &kp N6       &kp N7                      &kp N8        &kp N9    &kp N0          &mt DEL BACKSPACE
&kp TAB                  &kp Q                   &kp W                          &kp E                       &kp R                   &kp T          &kp Y        &kp U                       &kp I         &kp O     &kp P           &mt BACKSLASH MINUS
&kp CAPS                 &kp A                   &kp S                          &kp D                       &kp F                   &kp G          &kp H        &kp J                       &kp K         &kp L     &kp SEMI        &kp SINGLE_QUOTE
&kp LSHFT                &kp Z                   &kp X                          &kp C                       &kp V                   &kp B          &kp N        &kp M                       &kp COMMA     &kp DOT   &kp FSLH        &kp RIGHT_SHIFT
&mt GLOBE C_VOLUME_DOWN  &mt K_LOCK C_VOLUME_UP  &mt LEFT_CONTROL LEFT_BRACKET  &mt LEFT_ALT RIGHT_BRACKET  &mt LEFT_COMMAND EQUAL  &lt 1 ENTER    &lt 2 SPACE  &lt 3 LS(LC(LG(NUMBER_4)))  &kp UP_ARROW  &kp DOWN  &kp LEFT_ARROW  &kp RIGHT
            >;
        };

        layer_1 {
            bindings = <
&bt BT_PRV   &bt BT_NXT  &bt BT_CLR  &trans  &trans  &trans    &trans           &kp FSLH         &kp ASTERISK     &trans     &trans     &trans
&bootloader  &trans      &trans      &trans  &trans  &trans    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans     &trans     &trans
&trans       &trans      &trans      &trans  &trans  &trans    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS  &trans     &trans
&trans       &trans      &trans      &trans  &trans  &trans    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS   &trans     &trans
&trans       &trans      &trans      &trans  &trans  &trans    &kp KP_NUMBER_0  &kp DOT          &trans           &kp RET    &kp EQUAL  &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &mo 3     &trans  &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_3 {
            bindings = <
&soft_off  &bootloader  &trans  &trans  &trans  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp EQUAL       &trans          &trans           &trans  &trans
&trans     &trans       &trans  &trans  &trans  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &trans          &trans          &trans           &trans  &trans
&trans     &trans       &trans  &trans  &trans  &trans                  &trans                 &trans          &msc SCRL_UP    &trans           &trans  &trans
&trans     &trans       &trans  &trans  &trans  &trans                  &trans                 &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans
&trans     &trans       &trans  &trans  &trans  &trans                  &trans                 &trans          &trans          &trans           &trans  &trans
            >;
        };
    };
};
